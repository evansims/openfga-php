<?xml version="1.0"?>
<ruleset name="OpenFGA PHPMD Rules"
         xmlns="http://pmd.sf.net/ruleset/1.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://pmd.sf.net/ruleset/1.0.0
                     http://pmd.sf.net/ruleset_xml_schema.xsd"
         xsi:noNamespaceSchemaLocation="
                     http://pmd.sf.net/ruleset_xml_schema.xsd">
    <description>
        PHP Mess Detector ruleset for OpenFGA PHP SDK - focused on identifying complex code and refactoring opportunities
    </description>

    <!-- Clean Code Rules -->
    <rule ref="rulesets/cleancode.xml">
        <!-- Allow static factory methods and utility classes -->
        <exclude name="StaticAccess" />
        <!-- Allow else expressions when they improve readability -->
        <exclude name="ElseExpression" />
    </rule>
    
    <!-- Code Size Rules -->
    <rule ref="rulesets/codesize.xml">
        <!-- SDK clients often have many public methods -->
        <exclude name="TooManyPublicMethods" />
        <!-- Allow more methods for service classes -->
        <exclude name="TooManyMethods" />
    </rule>
    
    <!-- Cyclomatic Complexity: Methods with complexity > 10 need refactoring -->
    <rule ref="rulesets/codesize.xml/CyclomaticComplexity">
        <properties>
            <property name="reportLevel" value="10" />
        </properties>
    </rule>
    
    <!-- NPath Complexity: Number of acyclic execution paths -->
    <rule ref="rulesets/codesize.xml/NPathComplexity">
        <properties>
            <property name="minimum" value="200" />
        </properties>
    </rule>
    
    <!-- Excessive Method Length: Methods > 100 lines need refactoring -->
    <rule ref="rulesets/codesize.xml/ExcessiveMethodLength">
        <properties>
            <property name="minimum" value="100" />
            <property name="ignore-whitespace" value="true" />
        </properties>
    </rule>
    
    <!-- Excessive Class Length: Classes > 1000 lines might need splitting -->
    <rule ref="rulesets/codesize.xml/ExcessiveClassLength">
        <properties>
            <property name="minimum" value="1000" />
            <property name="ignore-whitespace" value="true" />
        </properties>
    </rule>
    
    <!-- Excessive Parameter List: More than 5 parameters suggests a parameter object -->
    <rule ref="rulesets/codesize.xml/ExcessiveParameterList">
        <properties>
            <property name="minimum" value="5" />
        </properties>
    </rule>
    
    <!-- Design Rules -->
    <rule ref="rulesets/design.xml">
        <!-- Allow exit expressions in CLI tools -->
        <exclude name="ExitExpression" />
        <!-- Allow more than 15 children for large domain models -->
        <exclude name="NumberOfChildren" />
    </rule>
    
    <!-- Coupling Rules -->
    <rule ref="rulesets/design.xml/CouplingBetweenObjects">
        <properties>
            <property name="maximum" value="13" />
        </properties>
    </rule>
    
    <!-- Controversial Rules (optional, but useful) -->
    <rule ref="rulesets/controversial.xml/Superglobals" />
    <rule ref="rulesets/controversial.xml/CamelCaseClassName" />
    <rule ref="rulesets/controversial.xml/CamelCaseMethodName" />
    
    <!-- Naming Rules -->
    <rule ref="rulesets/naming.xml">
        <!-- Allow short variable names in specific contexts -->
        <exclude name="ShortVariable" />
        <!-- Allow longer variable names for descriptive purposes -->
        <exclude name="LongVariable" />
    </rule>
    
    <!-- Unused Code Rules -->
    <rule ref="rulesets/unusedcode.xml" />
    
    <!-- Custom exclude patterns -->
    <exclude-pattern>*/vendor/*</exclude-pattern>
    <exclude-pattern>*/tests/*</exclude-pattern>
    <exclude-pattern>*/examples/*</exclude-pattern>
</ruleset>