name: Documentation

on:
  push:
    branches: [main]
    paths:
      - "src/**"
      - "tools/docs/**"
      - ".github/workflows/docs.yml"
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          egress-policy: audit

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup PHP
        uses: shivammathur/setup-php@cf4cade2721270509d5b1c766ab3549210a39a2a # v2.3.3
        with:
          php-version: "8.3"
          coverage: none

      - name: Install SDK dependencies
        run: composer install --prefer-dist --no-progress --no-dev --optimize-autoloader

      - name: Install documentation generator dependencies
        run: |
          cd tools/docs
          composer install --prefer-dist --no-progress --no-dev --optimize-autoloader

      - name: Generate documentation
        run: composer docs

      - name: Setup Pages
        uses: actions/configure-pages@983d7736d9b0ae728b81ab479565c72886d7745b # v5.0.0

      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@44a6e6beabd48582f863aeeb6cb2151cc1716697 # v1.0.13
        with:
          source: "./docs"
          destination: "./_site"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@56afc609e74202658d3ffba0e8f6dda462b719fa # v3.0.1
        with:
          path: "./_site"

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@d6db90164ac5ed86f2b6aed7e0febac5b3c0c03e # v4.0.5

  sync-wiki:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup PHP for docs generation
        uses: shivammathur/setup-php@cf4cade2721270509d5b1c766ab3549210a39a2a # v2.3.3
        with:
          php-version: "8.3"
          coverage: none

      - name: Install SDK dependencies
        run: composer install --prefer-dist --no-progress --no-dev --optimize-autoloader

      - name: Install documentation generator dependencies
        run: |
          cd tools/docs
          composer install --prefer-dist --no-progress --no-dev --optimize-autoloader

      - name: Generate documentation for Wiki
        run: composer docs

      - name: Prepare wiki content
        run: |
          mkdir -p wiki-content
          cp -r docs/* wiki-content/
          
          # Create wiki-compatible files
          cd wiki-content
          
          # Rename index.md to Home.md (Wiki homepage)
          if [ -f "index.md" ]; then
            mv index.md Home.md
          fi
          
          # Convert directory structure to wiki-friendly format
          find . -name "*.md" -type f | while read file; do
            # Remove .md extension from internal links
            sed -i 's/\.md)/)/g' "$file"
            
            # Convert relative paths to wiki links
            sed -i 's|\[\([^]]*\)\](\([^)]*\)/\([^)]*\))|\[\1\](\3)|g' "$file"
          done

      - name: Initialize or clone Wiki repository
        run: |
          # Try to clone the wiki repository
          if git clone "https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.wiki.git" wiki-repo 2>/dev/null; then
            echo "Wiki repository exists, cloned successfully"
          else
            echo "Wiki repository doesn't exist, initializing new one"
            mkdir wiki-repo
            cd wiki-repo
            git init
            git remote add origin "https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.wiki.git"
          fi
          
          cd wiki-repo
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Sync to Wiki
        run: |
          cd wiki-repo
          
          # Clear existing wiki content (except .git)
          find . -type f -not -path "./.git/*" -delete 2>/dev/null || true
          
          # Copy new content
          cp -r ../wiki-content/* .
          
          # Add and commit changes
          git add .
          
          if git diff --staged --quiet; then
            echo "No changes to Wiki"
          else
            git commit -m "Auto-sync documentation from main branch
            
            Generated from commit: ${{ github.sha }}
            ðŸ¤– Automated update via GitHub Actions"
            
            # Push to master branch (create if first push)
            if git ls-remote --heads origin master | grep -q master; then
              git push origin master
            else
              git push -u origin master
            fi
            echo "Wiki updated successfully"
          fi
