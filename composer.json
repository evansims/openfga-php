{
  "name": "evansims/openfga-php",
  "description": "Stop writing authorization logic. Start asking questions. OpenFGA high performance relationship-based access control for PHP.",
  "license": "Apache-2.0",
  "type": "library",
  "keywords": [
    "openfga",
    "authorization",
    "fine-grained-authorization",
    "access-control",
    "permissions",
    "rbac",
    "abac",
    "relationship-based-access-control",
    "zanzibar",
    "auth0-fga",
    "security",
    "authentication",
    "policy-engine",
    "observability",
    "opentelemetry"
  ],
  "authors": [
    {
      "name": "Evan Sims",
      "email": "hello@evansims.com",
      "homepage": "https://evansims.com/"
    }
  ],
  "homepage": "https://github.com/evansims/openfga-php",
  "support": {
    "issues": "https://github.com/evansims/openfga-php/issues",
    "source": "https://github.com/evansims/openfga-php",
    "docs": "https://github.com/evansims/openfga-php#readme"
  },
  "require": {
    "php": "^8.3",
    "ext-ctype": "*",
    "ext-json": "*",
    "psr-discovery/all": "^1",
    "psr/http-client-implementation": "^1",
    "psr/http-factory-implementation": "^1",
    "psr/http-message-implementation": "^1"
  },
  "require-dev": {
    "ergebnis/composer-normalize": "^2",
    "friendsofphp/php-cs-fixer": "^3",
    "kriswallsmith/buzz": "^1.3",
    "nyholm/psr7": "^1.8",
    "open-telemetry/api": "^1.1",
    "open-telemetry/sdk": "^1.1",
    "pestphp/pest": "^3",
    "phpmd/phpmd": "^2.15",
    "phpstan/phpstan": "^2",
    "phpstan/phpstan-strict-rules": "^2",
    "psr-mock/http-client-implementation": "^1",
    "psr-mock/http-factory-implementation": "^1",
    "psr-mock/http-message-implementation": "^1",
    "rector/rector": "^2",
    "vimeo/psalm": "^6",
    "wikimedia/composer-merge-plugin": "^2"
  },
  "suggest": {
    "open-telemetry/api": "For observability support with metrics, tracing and logging",
    "open-telemetry/sdk": "For OpenTelemetry SDK implementation",
    "tbachert/spi": "For automatic service provider registration in SPI-compatible frameworks"
  },
  "minimum-stability": "stable",
  "prefer-stable": true,
  "autoload": {
    "psr-4": {
      "OpenFGA\\": "src/"
    }
  },
  "autoload-dev": {
    "psr-4": {
      "OpenFGA\\Tests\\": "tests/"
    },
    "files": [
      "src/Helpers.php"
    ]
  },
  "config": {
    "allow-plugins": {
      "ergebnis/composer-normalize": true,
      "pestphp/pest-plugin": true,
      "php-http/discovery": false,
      "tbachert/spi": true,
      "wikimedia/composer-merge-plugin": true
    },
    "audit": {
      "abandoned": "report"
    },
    "optimize-autoloader": true,
    "platform": {
      "php": "8.3.16"
    },
    "platform-check": false,
    "preferred-install": "dist",
    "process-timeout": 0,
    "sort-packages": true
  },
  "extra": {
    "merge-plugin": {
      "ignore-duplicates": false,
      "include": [
        "composer.local.json"
      ],
      "merge-dev": true,
      "merge-extra": false,
      "merge-extra-deep": false,
      "merge-scripts": true,
      "recurse": true,
      "replace": true
    },
    "spi": {
      "OpenFGA\\Application\\Telemetry\\TelemetryInterface": [
        "OpenFGA\\Integration\\ServiceProvider"
      ],
      "OpenFGA\\Domain\\Schema\\SchemaValidatorInterface": [
        "OpenFGA\\Integration\\ServiceProvider"
      ],
      "OpenFGA\\TransformerInterface": [
        "OpenFGA\\Integration\\ServiceProvider"
      ]
    }
  },
  "scripts": {
    "docs": [
      "@php tools/docs-coverage.php",
      "@php tools/link-checker.php",
      "@php tools/docs-lint.php",
      "@php tools/docs-metrics.php"
    ],
    "docs:update": [
      "@php tools/docs/generate.php",
      "@php tools/llms-generator.php",
      "./tools/sync-wiki.sh",
      "@php tools/docs-lint.php"
    ],
    "lint": [
      "@php ./vendor/bin/phpstan analyze",
      "@php ./vendor/bin/psalm",
      "@php ./vendor/bin/rector process src --dry-run",
      "@php ./vendor/bin/php-cs-fixer fix --dry-run --diff"
    ],
    "lint:fix": [
      "@php ./vendor/bin/rector process src",
      "@php ./vendor/bin/php-cs-fixer fix"
    ],
    "release": [
      "@php tools/release.php"
    ],
    "security": [
      "@php tools/workflow-security-audit.php"
    ],
    "security:fix": [
      "@php tools/workflow-security-audit.php --fix"
    ],
    "test": [
      "@test:unit",
      "@test:integration",
      "@test:contract",
      "@test:tools"
    ],
    "test:contract": [
      "@php ./vendor/bin/pest --colors=always --testsuite contract --fail-on-risky --fail-on-warning"
    ],
    "test:integration": "./tools/run-integration-tests.sh",
    "test:integration:run": [
      "@php ./vendor/bin/pest --colors=always --testsuite integration --fail-on-risky --fail-on-warning --coverage --coverage-cobertura coverage/cobertura.xml --log-junit junit.xml"
    ],
    "test:integration:start": [
      "docker compose -f docker-compose.integration.yml up -d openfga otel-collector"
    ],
    "test:integration:stop": [
      "docker compose -f docker-compose.integration.yml stop"
    ],
    "test:tools": [
      "@php ./vendor/bin/pest --testsuite tools --fail-on-risky --fail-on-warning"
    ],
    "test:unit": [
      "@php ./vendor/bin/pest --testsuite unit --fail-on-risky --fail-on-warning --coverage --coverage-cobertura coverage/cobertura.xml --log-junit junit.xml"
    ]
  }
}
