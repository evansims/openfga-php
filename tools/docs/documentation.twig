# {{ className }}

{% if classDescription %}{{ classDescription }}
{% endif %}

## Table of Contents

- [Namespace](#namespace)
{% if sourceFile is defined and sourceFile is not empty %}
- [Source](#source)
{% endif %}
{% if interfaces is not empty %}
- [Implements](#implements)
{% endif %}
{% if relatedClasses is defined and relatedClasses|length > 0 %}
- [Related Classes](#related-classes)
{% endif %}
{% if constants is defined and constants|length > 0 %}
- [Constants](#constants)
{% endif %}
{% if isEnum and cases is not empty %}
- [Cases](#cases)
{% endif %}
{% if translations is defined and translations is not empty %}
- [Translation Tables](#translation-tables)
{% endif %}
{% if methods is not empty %}
- [Methods](#methods)

{% set categorized = {} %}
{%- for method in methods -%}
  {%- set category = method.category|default('Other') -%}
  {%- if categorized[category] is not defined -%}
    {%- set categorized = categorized|merge({(category): []}) -%}
  {%- endif -%}
  {%- set categorized = categorized|merge({(category): categorized[category]|merge([method])}) -%}
{%- endfor %}
{% for category, categoryMethods in categorized %}
- [{{ category }}](#{{ category|lower|replace({' ': '-'}) }})
{% for method in categoryMethods %}
  - [`{{ method.name }}()`](#{{ method.name|lower }})
{% endfor %}
{% endfor %}
{% endif %}

## Namespace
`{{ namespace }}`

{% if sourceFile is defined and sourceFile is not empty %}
## Source
[View source code]({{ sourceFile }})
{% endif %}

{% if interfaces is not empty %}
## Implements
{% for interface in interfaces %}
- {{ interface }}
{% endfor %}
{% endif %}

{% if relatedClasses is defined and relatedClasses|length > 0 %}
## Related Classes
{% for related in relatedClasses %}
- {{ related.link }} ({{ related.relationship }})
{% endfor %}
{% endif %}

{% if constants is defined and constants|length > 0 %}
## Constants
| Name | Value | Description |
|------|-------|-------------|
{% for constant in constants %}
| `{{ constant.name }}` | `{{ constant.value|raw }}` | {{ constant.description }} |
{% endfor %}
{% endif %}

{% if isEnum and cases is not empty %}
## Cases
| Name | Value | Description |
|------|-------|-------------|
{% for case in cases %}| `{{ case.name }}` | {% if case.value is not null %}`{{ case.value }}`{% else %}-{% endif %} | {{ case.description }} |
{% endfor %}
{% endif %}

{% if translations is defined and translations is not empty %}
## Translation Tables

The following tables show all available translations for each message key used throughout the OpenFGA PHP SDK.

{% for messageKey, localeTranslations in translations %}
{% if localeTranslations is not empty %}
### `{{ messageKey }}`

| Locale | Translation |
|--------|-------------|
{% for locale, translationData in localeTranslations %}| {{ translationData.displayName }} | {{ translationData.translation }} |
{% endfor %}

{% endif %}
{% endfor %}
{% endif %}

{% if methods is not empty %}
## Methods

{% set categorized = {} %}
{%- for method in methods -%}
    {%- set category = method.category|default('Other') -%}
    {%- if categorized[category] is not defined -%}
        {%- set categorized = categorized|merge({(category): []}) -%}
    {%- endif -%}
    {%- set categorized = categorized|merge({(category): categorized[category]|merge([method])}) -%}
{%- endfor %}

{% for category, categoryMethods in categorized %}
{% if categorized|length > 1 %}
### {{ category }}
{% endif %}
{% for method in categoryMethods %}
#### {{ method.name }}

{% if method.isFromInterface is defined and method.isFromInterface %}
*<small>Implements {{ method.fromInterface|replace({'OpenFGA\\': ''}) }}</small>*  
{% endif %}

```php
{{ method.signature|raw }}
```

{% if method.description %}{{ method.description }}
{% endif %}

{% if method.examples is defined and method.examples|length > 0 %}

{% for example in method.examples %}
**{{ example.title }}:**
```php
{{ example.code|raw }}
```

{% endfor %}
{% endif %}
{% if method.sourceLink is defined and method.sourceLink is not empty %}
[View source]({{ method.sourceLink }})
{% endif %}

{% if method.parameters is not empty %}
#### Parameters
| Name | Type | Description |
|------|------|-------------|
{% for param in method.parameters %}| `{{ param.name }}` | {{ param.typeDisplay|default(param.type)|raw }} | {{ param.description }} |
{% endfor %}
{% endif %}

{% if method.return.type %}
#### Returns
{{ method.return.typeDisplay|default(method.return.type)|raw }}{% if method.return.description is defined and method.return.description is not empty %}{% if "\n" in method.return.description %}

```php
{{ method.return.description }}
```
{% else %} â€” {{ method.return.description }}{% endif %}{% endif %}
{% endif %}

{% endfor %}
{% endfor %}
{% endif %}
