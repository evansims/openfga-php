# Use the official PHP image with XML extensions pre-installed
FROM php:8.3.16-cli-alpine3.20@sha256:f23cfcc1769efd8fd6731def171edf5ee2cd880617b356147033ddd20f5cf02d AS builder

# Install Composer
COPY --from=composer:2.7 /usr/bin/composer /usr/bin/composer

# Install system dependencies
RUN set -eux; \
    apk add --no-cache \
    # System tools
    git \
    unzip \
    curl \
    # Required libraries
    libpng \
    libjpeg-turbo \
    freetype \
    libwebp \
    libxpm \
    icu-libs \
    libzip \
    postgresql-libs \
    sqlite \
    libsodium \
    libxml2 \
    # Build dependencies
    $PHPIZE_DEPS \
    # For extensions
    libpng-dev \
    libjpeg-turbo-dev \
    freetype-dev \
    libwebp-dev \
    libxpm-dev \
    icu-dev \
    libzip-dev \
    libxml2-dev \
    libsodium-dev \
    curl-dev \
    postgresql-dev \
    sqlite-dev \
    oniguruma-dev \
    # For XML extensions
    libxslt-dev;

# Enable and configure extensions
RUN set -eux; \
    # Install core extensions one by one to avoid issues
    docker-php-ext-configure gd \
        --with-freetype \
        --with-jpeg \
        --with-webp; \
    docker-php-ext-install -j$(nproc) gd; \
    # Install other required extensions
    docker-php-ext-install -j$(nproc) \
        bcmath \
        ctype \
        curl \
        fileinfo \
        intl \
        mbstring \
        opcache \
        pcntl \
        pdo \
        pdo_mysql \
        pdo_pgsql \
        pdo_sqlite \
        posix \
        sodium \
        zip; \
    # Clean up
    docker-php-source delete; \
    rm -rf /tmp/* \
    && apk del $PHPIZE_DEPS \
    && rm -rf /var/cache/apk/*

WORKDIR /app

COPY composer.json ./

RUN composer install --no-interaction --no-scripts --no-autoloader --no-progress --no-suggest

COPY . .

RUN composer dump-autoload --optimize

CMD ["composer", "pest:integration:run"]
